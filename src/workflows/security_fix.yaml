"""Warp workflow for security vulnerability fixes."""

# Security Fix Workflow
name: security-fix
description: Automated security vulnerability remediation

# Workflow triggers
triggers:
  - type: webhook
    path: /webhooks/security-alert
    method: POST
  - type: schedule
    cron: "0 9 * * 1"  # Every Monday at 9 AM

# Workflow inputs
inputs:
  repository_url:
    type: string
    description: Repository to scan for security issues
    required: true
  
  severity_threshold:
    type: string
    description: Minimum severity to process
    default: medium
    enum: [low, medium, high, critical]
  
  auto_fix:
    type: boolean
    description: Automatically implement fixes
    default: false

# Workflow steps
steps:
  - name: security-scan
    description: Scan repository for security vulnerabilities
    action: aomass.security.scan
    inputs:
      repository_url: ${{ inputs.repository_url }}
      severity_threshold: ${{ inputs.severity_threshold }}
    outputs:
      vulnerabilities: vulnerabilities
  
  - name: prioritize-vulnerabilities
    description: Prioritize vulnerabilities by severity and exploitability
    action: aomass.security.prioritize
    depends_on: [security-scan]
    inputs:
      vulnerabilities: ${{ steps.security-scan.outputs.vulnerabilities }}
    outputs:
      prioritized_vulns: vulnerabilities
  
  - name: generate-fixes
    description: Generate security fixes for each vulnerability
    action: aomass.core.for_each
    depends_on: [prioritize-vulnerabilities]
    for_each: ${{ steps.prioritize-vulnerabilities.outputs.vulnerabilities }}
    steps:
      - name: analyze-vulnerability
        description: Analyze vulnerability details
        action: aomass.security.analyze
        inputs:
          vulnerability: ${{ item }}
        outputs:
          analysis: analysis
      
      - name: generate-fix-plan
        description: Generate security fix implementation plan
        action: aomass.security.plan_fix
        depends_on: [analyze-vulnerability]
        inputs:
          vulnerability: ${{ item }}
          analysis: ${{ steps.analyze-vulnerability.outputs.analysis }}
        outputs:
          fix_plan: plan
      
      - name: implement-fix
        description: Implement security fix
        action: aomass.implementer.implement
        depends_on: [generate-fix-plan]
        condition: ${{ inputs.auto_fix }}
        inputs:
          plan_id: ${{ steps.generate-fix-plan.outputs.plan.id }}
          dry_run: false
        outputs:
          implementation: implementation
      
      - name: security-test
        description: Test security fix
        action: aomass.security.test_fix
        depends_on: [implement-fix]
        condition: ${{ inputs.auto_fix }}
        inputs:
          vulnerability: ${{ item }}
          implementation: ${{ steps.implement-fix.outputs.implementation }}
        outputs:
          test_results: results
      
      - name: create-security-pr
        description: Create security fix PR
        action: aomass.pr_manager.create
        depends_on: [security-test]
        condition: ${{ inputs.auto_fix and steps.security-test.outputs.results.passed }}
        inputs:
          implementation_id: ${{ steps.implement-fix.outputs.implementation.id }}
          title: "Security: Fix ${{ item.type }} vulnerability"
          description: |
            ## Security Fix
            
            **Vulnerability:** ${{ item.type }}
            **Severity:** ${{ item.severity }}
            **CWE ID:** ${{ item.cwe_id }}
            
            ### Description
            ${{ item.description }}
            
            ### Fix Applied
            ${{ steps.generate-fix-plan.outputs.plan.description }}
            
            ### Files Modified
            ${{ join(steps.implement-fix.outputs.implementation.files_modified, ", ") }}
            
            ### Security Test Results
            âœ… Security tests passed
            
            ---
            *This is an automated security fix generated by AOMaaS*
          draft: false  # Security fixes shouldn't be drafts
        outputs:
          pr: pr
      
      - name: request-security-review
        description: Request security team review
        action: aomass.security.request_review
        depends_on: [create-security-pr]
        condition: ${{ inputs.auto_fix }}
        inputs:
          pr_id: ${{ steps.create-security-pr.outputs.pr.id }}
          vulnerability: ${{ item }}

# Workflow outputs
outputs:
  vulnerabilities_found:
    description: Number of vulnerabilities found
    value: ${{ len(steps.security-scan.outputs.vulnerabilities) }}
  
  fixes_implemented:
    description: Number of fixes implemented
    value: ${{ len(steps.generate-fixes.outputs[*].implement-fix) }}
  
  pull_requests:
    description: Security fix pull requests created
    value: ${{ steps.generate-fixes.outputs[*].create-security-pr.pr }}

# Security-specific error handling
on_error:
  - name: security-alert
    description: Alert security team of workflow failure
    action: aomass.security.alert
    inputs:
      message: "Security fix workflow failed for ${{ inputs.repository_url }}"
      severity: high

# Security notifications
notifications:
  on_vulnerabilities_found:
    condition: ${{ len(steps.security-scan.outputs.vulnerabilities) > 0 }}
    action: aomass.security.notify
    inputs:
      type: slack
      channel: "#security-alerts"
      message: "Found ${{ len(steps.security-scan.outputs.vulnerabilities) }} security vulnerabilities in ${{ inputs.repository_url }}"
  
  on_fixes_deployed:
    condition: ${{ len(outputs.fixes_implemented) > 0 }}
    action: aomass.security.notify
    inputs:
      type: email
      to: "security-team@company.com"
      subject: "Security fixes deployed"
      body: "Deployed ${{ len(outputs.fixes_implemented) }} security fixes for ${{ inputs.repository_url }}"
